.data
	n: .word 47 @duzina do koje idemo sa fibonacijem
	prvi: .word 0 @ pomocne varijable za racunanje
	drugi: .word 1 
	sljedeci: .word 0
	.align 4
	a: .skip 188 @alokacija kontinualna memorije
.text
.global _start
_start:

	ldr r6, =a
	ldr r0, =prvi @ucitavanje adrese u registar
	ldr r1, =drugi
	ldr r0, [r0] @ucitavanje vrijednosti iz adrese u registar
	ldr r1, [r1]

	mov r2, #1
	ldr r3, =n 
	ldr r3, [r3]
	ldr r5, =sljedeci @ vrijednost koja se upisuje u niz
	ldr r5, [r5]

	loop:
		add r5, r0, r1 @dodajemo r0+r1 u r5
		mov r0, r1 @mijenjamo r0 sa r1
		mov r1, r5 @mijenjamo r1 sa r5

		str r5, [r6] @skladistimo vrijednost u niz
		add r6, r6, #4 @niz je tipa int koji je velicine 4 bajta pa prolazimo kroz niz dodavajuci 4

		adds r2, r2, #1 @povecavamo brojac
		cmp r2, r3 @poredimo brojac
		blt loop @ukoliko je vrijednost brojaca manja od @maximuma do kojeg idemo onda se vracamo na @pocetak loop labele