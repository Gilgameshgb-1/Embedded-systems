	.data
string:
	.asciz "       " @moguce je proizvoljno postaviti duzinu teksta
	.text
.global _start
_start:

	mov r7, #3
	mov r0, #0
	ldr r1, =string @ovaj blok koda sluzi za unos stringa
	mov r2, #7 @broj karaktera koji se unose ukljucujuci prostor za nul terminirajuci znak(ili enter)
	swi #0
	
	mov r7, #0
	mov r0, #4 @konstanta koja odredjuje dokle ide vanjska petlja
	mov r1, #3 @konstanta koja odredjuje dokle ide unutrasnja petlja
	
	@sortiranje je izvedeno koristeci bubble sort algoritam (barem sam ja tako zamislio)
	
loopOUT:
	mov r8, #0
	ldr r2, =string @predstavlja adresu nekog bajta u stringu
	add r3, r2, #1 @predstavlja adresu odma iza prethodno navedene
loopIN:
	ldrb r4, [r2] @uzimaju se vrijednosti koje se nalaza na adresama koje su pohranjene u registru
	ldrb r5, [r3] @ - || -
	cmp r4, r5 @usporedba potrebna za sortiranje po rastucem redoslijedu, porede se ascii vrijednosti
	ble true @ukoliko je prethodni uslov ispunjen prelazi se na labelu true
	mov r6, r5 @ova i sljedece 2 komande predstavljaju zamjenu sadrzaja u registru
	mov r5, r4 
	mov r4, r6
	strb r4, [r2] @ ova i sljedeca komanda vrse pohranu zamijenjenog sadrzaja
	strb r5, [r3] 
true:
	add r2, r2, #1 @pomicemo se na sljedeci karakter u stringu
	add r3, r3, #1
	cmp r8, r1 @kontrolni uslov za unutarasnju petlju
	ble loopIN 
	add r7, r7, #1
	cmp r7, r0 @kontrolni uslov za vanjsku petlju
	ble loopOUT 

	mov r7, #4
	mov r0, #1
	ldr r, =string @ispis stringa
	mov r2, #6
	swi #0