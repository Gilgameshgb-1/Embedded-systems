	.data
broj:
	.asciz "-12\0" @maksimalno moze biti 7 cifri + terminirajuci znak
	.text
.global _start
_start:
	
	mov r3, #10 @konstanta za mnozenje
	ldr r2, =broj @ucitavamo adresu stringa
	ldr r0, =broj @brojac
	mov r1, #0 @ovdje zapisujemo cifru (memorijska lokacija specificirana u zadatku)
	ldrb r7, [r2]
	cmp r7, #45 @provjera da li je prvi znak minus
	beq NEG @ako jeste prelazimo odma na loopNEG
loopPOZ:
	ldrb r4, [r2]
	subs r4, r4, #48 @normiramo na decimalni sistem, oduzimamo vrijednost 0 iz ASCII sistema
	mla r1, r1, r3, r4 @komanda za mnozenje i sabiranje te pohranu u r1, tj. mnozi se r1 sa r3 i doda se rr3 u r1
	add r2, r2, #1 @pomjeramo broj
	add r0, r0, #1 @pomjeramo brojac
	ldrb r5, [r0] @poredi se nenormirani string, zbog toga postoje 2 pohrane na pocetku r2 i r0
	cmp r5, #0 @ukoliko smo dosli do terminirajuceg znaka tj. NULL onda zavrsavamo petlju
	bne loop
	
	cmp r7, #45
	bne KRAJ
NEG:

add r2, r2, #1
add r0, r0, #1 @preskacemo samo minus, dole se kod isti ponavlja za upisivanje cifre, samo je sada registar u koji se upisuje r8
mov r8, #0
loopNEG:
	
ldrb r4, [r2]
	subs r4, r4, #48 @normiramo na decimalni sistem, oduzimamo vrijednost 0 iz ASCII sistema
	mla r1, r1, r3, r4 @komanda za mnozenje i sabiranje te pohranu u r1, tj. mnozi se r1 sa r3 i doda se rr3 u r1
	add r2, r2, #1 @pomjeramo broj
	add r0, r0, #1 @pomjeramo brojac
	ldrb r8, [r0] @poredi se nenormirani string, zbog toga postoje 2 pohrane na pocetku r2 i r0
	cmp r8, #0 @ukoliko smo dosli do terminirajuceg znaka tj. NULL onda zavrsavamo petlju
	bne loop

@potrebno je jos izvrsiti upis u nas zeljeni registar r7 negativan broj, tj. komplement broja iz registra 8
@za to je koristena komanda mvn
mvn r7, r8 @sada je upisan negativan broj
